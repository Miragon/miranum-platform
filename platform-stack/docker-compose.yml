# Use this only in dev environments. It's not intended for production usage.
version: '3.9'
services:

  tasklist:
    image: miragon/miranum-platform-tasklist-webapp:0.2.0-SNAPSHOT
    container_name: tasklist
    ports:
      - "3000:8080"
    restart: unless-stopped
    profiles:
      - engine
    depends_on:
      - engine
    networks:
      - internal

  engine:
    image: miragon/miranum-platform-engine-tasklist-service:0.2.0-SNAPSHOT
    container_name: engine
    ports:
      - "8090:8090"
    profiles:
      - engine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: mock-user, sampledata
      ENGINE_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${ENGINE_DATASOURCE_DB}
      ENGINE_SCHEMA_URL: http://host.docker.internal:8081/schema-registry
    depends_on:
      postgres:
        condition: service_healthy
      schema-registry:
        condition: service_started
    networks:
      - internal

  schema-registry:
    image: miragon/miranum-platform-schema-registry-service:0.2.0-SNAPSHOT
    container_name: schema-registry
    ports:
      - "8091:8091"
    profiles:
      - engine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      SCHEMA_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${SCHEMA_DATASOURCE_DB}
      SPRING_PROFILES_ACTIVE: sampledata
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal

  deployment:
    image: miragon/miranum-deployment-service:latest
    container_name: miranum-deployment
    ports:
      - "8092:8080"
    profiles:
      - deployment
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MIRANUM_DEPLOYMENT_SERVER_BPMN_TEST_URL: http://host.docker.internal
      MIRANUM_DEPLOYMENT_SERVER_BPMN_TEST_PORT: 8090
      MIRANUM_DEPLOYMENT_SERVER_DMN_TEST_URL: http://host.docker.internal
      MIRANUM_DEPLOYMENT_SERVER_DMN_TEST_PORT: 8090
      MIRANUM_DEPLOYMENT_SERVER_FORM_TEST_URL: http://host.docker.internal
      MIRANUM_DEPLOYMENT_SERVER_FORM_TEST_PORT: 8091
      MIRANUM_DEPLOYMENT_SERVER_CONFIG_TEST_URL: http://host.docker.internal
      MIRANUM_DEPLOYMENT_SERVER_CONFIG_TEST_PORT: 8090
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - internal

  nginx:
    image: nginx:1.24.0
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:8080"
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"

  keycloak:
    image: ${KEYCLOAK_IMAGE:-quay.io/keycloak/keycloak:20.0.3}
    container_name: keycloak
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '9090:8080'
    command: 'start-dev --http-relative-path /auth'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/" ]
      interval: 5s
      timeout: 2s
      retries: 15
    environment:
      KC_HOSTNAME: keycloak # this hostname must be resolved to 127.0.0.1 locally. Add it to your hosts file.
      KC_HOSTNAME_STRICT: 'false'
      KC_DB: ${LOCAL_KEYCLOAK_DB_VENDOR}
      KC_TRANSACTION_XA_ENABLED: 'false'
      KC_DB_URL: ${SSO_DATASOURCE_URL}
      KC_DB_USERNAME: ${SSO_DATASOURCE_USERNAME}
      KC_DB_PASSWORD: ${SSO_DATASOURCE_PASSWORD}
      KEYCLOAK_ADMIN: ${SSO_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${SSO_ADMIN_PASSWORD:-admin}
    networks:
      - local-keycloak
      - internal

  keycloak-init:
    image: klg71/keycloakmigration
    container_name: keycloak-init
    env_file:
      - './.env'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ADMIN_USER: admin
      ADMIN_PASSWORD: admin
      BASEURL: http://keycloak:8080/auth
      WAIT_FOR_KEYCLOAK: 'true'
      KEYCLOAK_CHANGELOG: /migration/keycloak-changelog.yml
    volumes:
      - './keycloak:/migration'
    networks:
      - local-keycloak

  postgres:
    image: postgres:13.2
    container_name: postgres
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "psql -l | grep keycloak | wc -l" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${ENGINE_DATASOURCE_DB},${SCHEMA_DATASOURCE_DB},${SSO_DATASOURCE_DB},${S3INTEGRATION_DATASOURCE_DB}
      - POSTGRES_PASSWORD=${LOCAL_DATASOURCE_PASSWORD}
      - POSTGRES_USER=${LOCAL_DATASOURCE_USERNAME}
    networks:
      - internal

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESSKEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRETKEY}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio:/data
    networks:
      - internal

networks:
  local-keycloak:
  internal:
