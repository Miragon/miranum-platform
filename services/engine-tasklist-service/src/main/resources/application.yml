info:
  application:
    name: '@project.artifactId@'
    version: '@project.version@'

camunda:
  bpm:
    authorization:
      enabled: false
    job-executor-acquire-by-priority: true
    generic-properties:
      properties:
        history-time-to-live: '185'
        history-cleanup-strategy: removalTimeBased
        history-cleanup-batch-window-start-time: '22:00'
        history-cleanup-batch-window-end-time: '06:00'
        history-removal-time-strategy: end
        history-cleanup-degree-of-parallelism: '4'
        enable-exceptions-after-unhandled-bpmn-error: true
    database:
      schema-update: false
    auto-deployment-enabled: false

management:
  server:
    port: '${ENGINE_SERVER_PORT:8080}'
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: 'health, info, prometheus'
      path-mapping:
        prometheus: metrics
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    prometheus:
      enabled: true
  health:
    ldap:
      enabled: false
  metrics:
    web:
      server:
        request:
          autotime:
            percentiles: '0.9,0.95,0.98,0.99,0.999,0.9999,0.99999,1'
    distribution:
      slo:
        http: 10,20,30,50,100,200,300,500,1000,2000,3000,5000,10000,15000,20000,25000,30000

server:
  port: '${ENGINE_SERVER_PORT:8080}'
  error:
    include-exception: false
    include-stacktrace: never
    whitelabel:
      enabled: false

spring:
  application:
    name: '@project.artifactId@'
  datasource:
    url: '${ENGINE_DATASOURCE_URL:jdbc:h2:file:~/backenddb;DB_CLOSE_ON_EXIT=FALSE}'
    username: '${ENGINE_DATASOURCE_USER:sa}'
    password: '${ENGINE_DATASOURCE_PASSWORD:}'
    driver-class-name: '${ENGINE_DATASOURCE_DRIVERCLASSNAME:org.h2.Driver}'
  jpa:
    database-platform: '${ENGINE_DATABASE_PLATFORM:org.hibernate.dialect.H2Dialect}'
    hibernate:
      ddl-auto: validate
    open-in-view: true
  flyway:
    enabled: true
    locations: "classpath:db/migration/{vendor}"

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SSO_ISSUER_URL}
      client:
        provider:
          keycloak:
            issuer-uri: ${SSO_ISSUER_URL}
            user-info-uri: ${SSO_BASE_URL}/realms/${SSO_REALM}/protocol/openid-connect/userinfo
            # jwk-set-uri: ${SSO_BASE_URL}/realms/${SSO_REALM}/protocol/openid-connect/certs
            user-name-attribute: user_name
        registration:
          keycloak:
            provider: keycloak
            client-id: ${SSO_ENGINE_CLIENT_ID}
            client-secret: ${SSO_ENGINE_CLIENT_SECRET}
            scope: email, profile, openid

springdoc:
  packagesToScan: io.miranum.platform.engine
  pathsToMatch: /**
  swagger-ui:
    oauth:
      clientId: ${SSO_ENGINE_CLIENT_ID}
      clientSecret: ${SSO_ENGINE_CLIENT_SECRET}
      realm: ${SSO_REALM}
      appName: Engine
    csrf:
      enabled: false
  writer-with-default-pretty-printer: true

#Polyflow
polyflow:
  view:
    jpa:
      stored-items: TASK, DATA_ENTRY # currently only tasks and data entries, no process definition or process instances
      payload-attribute-level-limit: 1
      task-filters:
        include: unknown
feign:
  client:
    config:
      engine-schema:
        url: ${ENGINE_SCHEMA_URL}
      task-schema:
        url: ${ENGINE_SCHEMA_URL}

miranum:
  s3service:
    http-API: ${DOCUMENT_STORAGE_HOST}:${DOCUMENT_STORAGE_PORT}
  # override default security settings
  security:
    permittedUrls:
      - "/error"
      - "/actuator/**"
      - "/engine-rest/deployment"
      - "/rest/deployment"
logging.level:
  io:
    holunda:
      polyflow: DEBUG
